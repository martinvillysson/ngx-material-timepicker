{"version":3,"file":"ngx-material-timepicker.js","sources":["ng://ngx-material-timepicker/src/app/material-timepicker/models/time-unit.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-period.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/models/time-format.enum.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/time-adapter.ts","ng://ngx-material-timepicker/src/app/material-timepicker/services/ngx-material-timepicker.service.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/ngx-material-timepicker-content/ngx-material-timepicker-content.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-toggle-icon.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-toggle-button/ngx-material-timepicker-toggle.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/tokens/time-locale.token.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-timepicker.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/ngx-material-timepicker-theme.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/utils/timepicker-time.utils.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-hours-face/ngx-material-timepicker-hours-face.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-face/ngx-material-timepicker-face.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-button/ngx-material-timepicker-button.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial/ngx-material-timepicker-dial.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-parser.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-dial-control/ngx-material-timepicker-dial-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-period/ngx-material-timepicker-period.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/style-sanitizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/minutes-formatter.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/ngx-timepicker-field.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/time-localizer.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/active-hour.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/pipes/active-minute.pipe.ts","ng://ngx-material-timepicker/src/app/material-timepicker/directives/autofocus.directive.ts","ng://ngx-material-timepicker/src/app/material-timepicker/ngx-material-timepicker.module.ts"],"sourcesContent":["export enum TimeUnit {\r\n    HOUR,\r\n    MINUTE\r\n}\r\n","export enum TimePeriod {\r\n    AM = 'AM',\r\n    PM = 'PM'\r\n}\r\n","export enum TimeFormat {\r\n    TWELVE = 'hh:mm a',\r\n    TWELVE_SHORT = 'h:m a',\r\n    TWENTY_FOUR = 'HH:mm',\r\n    TWENTY_FOUR_SHORT = 'H:m'\r\n}\r\n","/* tslint:disable */\r\nimport { DateTime } from 'luxon';\r\n\r\n\r\nexport function isSameOrAfter(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\r\n    if (unit === 'hours') {\r\n        return time.hour >= compareWith.hour;\r\n    }\r\n    if (unit === 'minutes') {\r\n        return time.hasSame(compareWith, unit) || time.valueOf() > compareWith.valueOf();\r\n    }\r\n}\r\n\r\nexport function isSameOrBefore(time: DateTime, compareWith: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\r\n    if (unit === 'hours') {\r\n        return time.hour <= compareWith.hour;\r\n    }\r\n    if (unit === 'minutes') {\r\n        return time.hasSame(compareWith, unit) || time.valueOf() <= compareWith.valueOf();\r\n    }\r\n}\r\n\r\nexport function isBetween(time: DateTime, before: DateTime, after: DateTime, unit: 'hours' | 'minutes' = 'minutes'): boolean {\r\n    if (unit === 'hours') {\r\n        return isSameOrBefore(time, after, unit) && isSameOrAfter(time, before, unit);\r\n    }\r\n    if (unit === 'minutes') {\r\n        return isSameOrBefore(time, after) && isSameOrAfter(time, before);\r\n    }\r\n}\r\n\r\nexport function isDigit(e: KeyboardEvent) {\r\n    // Allow: backspace, delete, tab, escape, enter\r\n    if ([46, 8, 9, 27, 13].some(n => n === e.keyCode) ||\r\n        // Allow: Ctrl/cmd+A\r\n        (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: Ctrl/cmd+C\r\n        (e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: Ctrl/cmd+X\r\n        (e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true)) ||\r\n        // Allow: home, end, left, right, up, down\r\n        (e.keyCode >= 35 && e.keyCode <= 40)) {\r\n\r\n        return true;\r\n    }\r\n    return !((e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105));\r\n}\r\n","import { DateTime, DateTimeFormatOptions, LocaleOptions, NumberingSystem } from 'luxon';\r\n\r\nimport { TimeFormat } from '../models/time-format.enum';\r\nimport { TimePeriod } from '../models/time-period.enum';\r\nimport { isBetween, isSameOrAfter, isSameOrBefore } from '../utils/timepicker.utils';\r\nimport { TimeOptions } from '../models/time-options.interface';\r\n\r\n// @dynamic\r\nexport class TimeAdapter {\r\n    static DEFAULT_FORMAT = 12;\r\n    static DEFAULT_LOCALE = 'en-US';\r\n    static DEFAULT_NUMBERING_SYSTEM: NumberingSystem = 'latn';\r\n\r\n    static parseTime(time: string, opts: TimeOptions): DateTime {\r\n        const {numberingSystem, locale} = TimeAdapter.getLocaleOptionsByTime(time, opts);\r\n        const isPeriodExist = time.split(' ').length === 2;\r\n        const timeMask = isPeriodExist ? TimeFormat.TWELVE_SHORT : TimeFormat.TWENTY_FOUR_SHORT;\r\n\r\n        return DateTime.fromFormat(time, timeMask, {numberingSystem, locale});\r\n    }\r\n\r\n    static formatTime(time: string, opts: TimeOptions): string {\r\n        const {format} = opts;\r\n\r\n        return TimeAdapter.parseTime(time, opts).setLocale(TimeAdapter.DEFAULT_LOCALE)\r\n            .toLocaleString({\r\n                ...DateTime.TIME_SIMPLE,\r\n                hour12: format !== 24,\r\n                numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM\r\n            });\r\n    }\r\n\r\n    static toLocaleTimeString(time: string, opts: TimeOptions = {}): string {\r\n        const {format = TimeAdapter.DEFAULT_FORMAT, locale = TimeAdapter.DEFAULT_LOCALE} = opts;\r\n        const timeFormat: DateTimeFormatOptions = {...DateTime.TIME_SIMPLE, hour12: format !== 24};\r\n        const timeMask = (format === 24) ? TimeFormat.TWENTY_FOUR_SHORT : TimeFormat.TWELVE_SHORT;\r\n\r\n        return DateTime.fromFormat(time, timeMask).setLocale(locale).toLocaleString(timeFormat);\r\n    }\r\n\r\n    static isTimeAvailable(\r\n        time: string,\r\n        min?: DateTime,\r\n        max?: DateTime,\r\n        granularity?: 'hours' | 'minutes',\r\n        minutesGap?: number,\r\n        format?: number\r\n    ): boolean {\r\n        if (!time) {\r\n            return;\r\n        }\r\n\r\n        const convertedTime = this.parseTime(time, {format});\r\n        const minutes = convertedTime.minute;\r\n\r\n        if (minutesGap && minutes === minutes && minutes % minutesGap !== 0) {\r\n            throw new Error(`Your minutes - ${minutes} doesn\\'t match your minutesGap - ${minutesGap}`);\r\n        }\r\n        const isAfter = (min && !max)\r\n            && isSameOrAfter(convertedTime, min, granularity);\r\n        const isBefore = (max && !min)\r\n            && isSameOrBefore(convertedTime, max, granularity);\r\n        const between = (min && max)\r\n            && isBetween(convertedTime, min, max, granularity);\r\n        const isAvailable = !min && !max;\r\n\r\n        return isAfter || isBefore || between || isAvailable;\r\n    }\r\n\r\n    /***\r\n     *  Format hour according to time format (12 or 24)\r\n     */\r\n    static formatHour(currentHour: number, format: number, period: TimePeriod): number {\r\n        if (format === 24) {\r\n            return currentHour;\r\n        }\r\n        const hour = period === TimePeriod.AM ? currentHour : currentHour + 12;\r\n\r\n        if (period === TimePeriod.AM && hour === 12) {\r\n            return 0;\r\n        } else if (period === TimePeriod.PM && hour === 24) {\r\n            return 12;\r\n        }\r\n        return hour;\r\n    }\r\n\r\n    static fromDateTimeToString(time: DateTime, format: number): string {\r\n        const timeFormat = format === 24 ? TimeFormat.TWENTY_FOUR : TimeFormat.TWELVE;\r\n\r\n        return time.reconfigure({\r\n            numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM,\r\n            locale: TimeAdapter.DEFAULT_LOCALE\r\n        }).toFormat(timeFormat);\r\n    }\r\n\r\n    private static getLocaleOptionsByTime(time: string, opts: LocaleOptions): LocaleOptions {\r\n        const {numberingSystem, locale} = DateTime.local().setLocale(opts.locale).resolvedLocaleOpts();\r\n        const localeConfig: LocaleOptions = {numberingSystem: numberingSystem as NumberingSystem, locale};\r\n        const defaultConfig: LocaleOptions = {numberingSystem: TimeAdapter.DEFAULT_NUMBERING_SYSTEM, locale: TimeAdapter.DEFAULT_LOCALE};\r\n\r\n        return isNaN(parseInt(time, 10)) ? localeConfig : defaultConfig;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ClockFaceTime } from '../models/clock-face-time.interface';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { TimePeriod } from '../models/time-period.enum';\r\nimport { TimeAdapter } from './time-adapter';\r\nimport { DateTime } from 'luxon';\r\n\r\n\r\nconst DEFAULT_HOUR: ClockFaceTime = {\r\n    time: 12,\r\n    angle: 360\r\n};\r\nconst DEFAULT_MINUTE: ClockFaceTime = {\r\n    time: 0,\r\n    angle: 360\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NgxMaterialTimepickerService {\r\n\r\n    private hourSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_HOUR);\r\n    private minuteSubject = new BehaviorSubject<ClockFaceTime>(DEFAULT_MINUTE);\r\n    private periodSubject = new BehaviorSubject<TimePeriod>(TimePeriod.AM);\r\n\r\n\r\n    set hour(hour: ClockFaceTime) {\r\n        this.hourSubject.next(hour);\r\n    }\r\n\r\n    get selectedHour(): Observable<ClockFaceTime> {\r\n        return this.hourSubject.asObservable();\r\n    }\r\n\r\n    set minute(minute: ClockFaceTime) {\r\n        this.minuteSubject.next(minute);\r\n    }\r\n\r\n    get selectedMinute(): Observable<ClockFaceTime> {\r\n        return this.minuteSubject.asObservable();\r\n    }\r\n\r\n    set period(period: TimePeriod) {\r\n        const isPeriodValid = (period === TimePeriod.AM) || (period === TimePeriod.PM);\r\n\r\n        if (isPeriodValid) {\r\n            this.periodSubject.next(period);\r\n        }\r\n    }\r\n\r\n    get selectedPeriod(): Observable<TimePeriod> {\r\n        return this.periodSubject.asObservable();\r\n    }\r\n\r\n\r\n    setDefaultTimeIfAvailable(time: string, min: DateTime, max: DateTime, format: number, minutesGap?: number) {\r\n        /* Workaround to double error message*/\r\n        try {\r\n            if (TimeAdapter.isTimeAvailable(time, min, max, 'minutes', minutesGap)) {\r\n                this.setDefaultTime(time, format);\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    getFullTime(format: number): string {\r\n        const hour = this.hourSubject.getValue().time;\r\n        const minute = this.minuteSubject.getValue().time;\r\n        const period = format === 12 ? this.periodSubject.getValue() : '';\r\n        const time = `${hour}:${minute} ${period}`.trim();\r\n\r\n        return TimeAdapter.formatTime(time, {format});\r\n    }\r\n\r\n    private setDefaultTime(time: string, format: number) {\r\n        const defaultTime = TimeAdapter.parseTime(time, {format}).toJSDate();\r\n\r\n        if (DateTime.fromJSDate(defaultTime).isValid) {\r\n            const period = time.substr(time.length - 2).toUpperCase();\r\n            const hour = defaultTime.getHours();\r\n\r\n            this.hour = {...DEFAULT_HOUR, time: formatHourByPeriod(hour, period as TimePeriod)};\r\n            this.minute = {...DEFAULT_MINUTE, time: defaultTime.getMinutes()};\r\n            this.period = period as TimePeriod;\r\n\r\n        } else {\r\n            this.resetTime();\r\n        }\r\n    }\r\n\r\n    private resetTime(): void {\r\n        this.hour = {...DEFAULT_HOUR};\r\n        this.minute = {...DEFAULT_MINUTE};\r\n        this.period = TimePeriod.AM;\r\n    }\r\n}\r\n\r\n/***\r\n *  Format hour in 24hours format to meridian (AM or PM) format\r\n */\r\nfunction formatHourByPeriod(hour: number, period: TimePeriod): number {\r\n    switch (period) {\r\n        case TimePeriod.AM:\r\n            return hour === 0 ? 12 : hour;\r\n        case TimePeriod.PM:\r\n            return hour === 12 ? 12 : hour - 12;\r\n        default:\r\n            return hour;\r\n    }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { DateTime } from 'luxon';\r\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\r\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { shareReplay, takeUntil } from 'rxjs/operators';\r\nimport { TimeAdapter } from '../../services/time-adapter';\r\nimport { TimepickerRef } from '../../models/timepicker-ref.interface';\r\nimport { TimepickerConfig } from '../../models/timepicker-config.interface';\r\n\r\nexport enum AnimationState {\r\n    ENTER = 'enter',\r\n    LEAVE = 'leave'\r\n}\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-content',\r\n    templateUrl: './ngx-material-timepicker-content.component.html',\r\n    styleUrls: ['./ngx-material-timepicker-content.component.scss'],\r\n    animations: [\r\n        trigger('timepicker', [\r\n            transition(`* => ${AnimationState.ENTER}`, [\r\n                style({transform: 'translateY(-30%)'}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(0)'}))\r\n            ]),\r\n            transition(`${AnimationState.ENTER} => ${AnimationState.LEAVE}`, [\r\n                style({transform: 'translateY(0)', opacity: 1}),\r\n                animate('0.2s ease-out', style({transform: 'translateY(-30%)', opacity: 0}))\r\n            ])\r\n        ])\r\n    ],\r\n    providers: [NgxMaterialTimepickerService]\r\n})\r\nexport class NgxMaterialTimepickerContentComponent implements OnInit, OnDestroy, TimepickerConfig {\r\n\r\n    selectedHour: Observable<ClockFaceTime>;\r\n    selectedMinute: Observable<ClockFaceTime>;\r\n    selectedPeriod: Observable<TimePeriod>;\r\n\r\n    timeUnit = TimeUnit;\r\n    activeTimeUnit = TimeUnit.HOUR;\r\n\r\n    animationState: AnimationState;\r\n\r\n    cancelBtnTmpl: TemplateRef<Node>;\r\n    editableHintTmpl: TemplateRef<Node>;\r\n    confirmBtnTmpl: TemplateRef<Node>;\r\n\r\n    enableKeyboardInput: boolean;\r\n    preventOverlayClick: boolean;\r\n    disableAnimation: boolean;\r\n    disabled: boolean;\r\n\r\n    format: number;\r\n    minutesGap: number;\r\n\r\n    minTime: DateTime;\r\n    maxTime: DateTime;\r\n    time: string;\r\n\r\n    timepickerBaseRef: TimepickerRef;\r\n\r\n    @Input()\r\n    set defaultTime(time: string) {\r\n        this.setDefaultTime(time);\r\n    }\r\n\r\n    private unsubscribe = new Subject();\r\n\r\n    constructor(private timepickerService: NgxMaterialTimepickerService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.animationState = !this.disableAnimation && AnimationState.ENTER;\r\n\r\n        this.defineTime();\r\n\r\n        this.selectedHour = this.timepickerService.selectedHour\r\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\r\n\r\n        this.selectedMinute = this.timepickerService.selectedMinute\r\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\r\n\r\n        this.selectedPeriod = this.timepickerService.selectedPeriod\r\n            .pipe(shareReplay({bufferSize: 1, refCount: true}));\r\n\r\n        this.timepickerBaseRef.timeUpdated.pipe(takeUntil(this.unsubscribe))\r\n            .subscribe(this.setDefaultTime.bind(this));\r\n    }\r\n\r\n    onHourChange(hour: ClockFaceTime): void {\r\n        this.timepickerService.hour = hour;\r\n    }\r\n\r\n    onHourSelected(hour: number): void {\r\n        this.changeTimeUnit(TimeUnit.MINUTE);\r\n        this.timepickerBaseRef.hourSelected.next(hour);\r\n    }\r\n\r\n    onMinuteChange(minute: ClockFaceTime): void {\r\n        this.timepickerService.minute = minute;\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.timepickerService.period = period;\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit): void {\r\n        this.activeTimeUnit = unit;\r\n    }\r\n\r\n    setTime(): void {\r\n        this.timepickerBaseRef.timeSet.next(this.timepickerService.getFullTime(this.format));\r\n        this.close();\r\n    }\r\n\r\n    close(): void {\r\n        if (this.disableAnimation) {\r\n            this.timepickerBaseRef.close();\r\n            return;\r\n        }\r\n\r\n        this.animationState = AnimationState.LEAVE;\r\n    }\r\n\r\n    animationDone(event: AnimationEvent): void {\r\n        if (event.phaseName === 'done' && event.toState === AnimationState.LEAVE) {\r\n            this.timepickerBaseRef.close();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n    private setDefaultTime(time: string): void {\r\n        this.timepickerService.setDefaultTimeIfAvailable(\r\n            time, this.minTime, this.maxTime, this.format, this.minutesGap);\r\n    }\r\n\r\n    private defineTime(): void {\r\n        const minTime = this.minTime;\r\n\r\n        if (minTime && !this.time) {\r\n            const time = TimeAdapter.fromDateTimeToString(minTime, this.format);\r\n\r\n            this.setDefaultTime(time);\r\n        }\r\n    }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ElementRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnDestroy,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\r\nimport { DateTime } from 'luxon';\r\nimport {\r\n  NgxMaterialTimepickerContentComponent\r\n} from './components/ngx-material-timepicker-content/ngx-material-timepicker-content.component';\r\nimport { TimepickerRef } from './models/timepicker-ref.interface';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayRef, ConnectedPosition } from '@angular/cdk/overlay';\r\n\r\nconst ESCAPE = 27;\r\n\r\n@Component({\r\n  selector: 'ngx-material-timepicker',\r\n  templateUrl: 'ngx-material-timepicker.component.html',\r\n  styleUrls: ['./ngx-material-timepicker.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxMaterialTimepickerComponent implements TimepickerRef, OnDestroy {\r\n  timeUpdated = new Subject<string>();\r\n  @ViewChild('pickerTmpl', { static: true }) pickerTmpl: TemplateRef<any>;\r\n  @Input() cancelBtnTmpl: TemplateRef<Node>;\r\n  @Input() editableHintTmpl: TemplateRef<Node>;\r\n  @Input() confirmBtnTmpl: TemplateRef<Node>;\r\n  @Input('ESC') isEsc = true;\r\n  @Input() enableKeyboardInput: boolean;\r\n  @Input() preventOverlayClick: boolean;\r\n  @Input() disableAnimation: boolean;\r\n  @Input() defaultTime: string;\r\n  @Input() trigger: ElementRef;\r\n  @Input() panelClass: string;\r\n  @Input() positions: ConnectedPosition[] = [{ originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' }];\r\n  overlayRef: OverlayRef;\r\n  overlayDetachmentsSubscription: any;\r\n  overlayBackdropClickSubscription: any;\r\n  overlayKeyDownSubscription: any;\r\n  subscriptions = new Subscription();\r\n\r\n  @Input()\r\n  set format(value: number) {\r\n    this._format = value === 24 ? 24 : 12;\r\n  }\r\n\r\n  get format(): number {\r\n    return this.timepickerInput ? this.timepickerInput.format : this._format;\r\n  }\r\n\r\n  @Input()\r\n  set minutesGap(gap: number) {\r\n    if (gap == null) {\r\n      return;\r\n    }\r\n    gap = Math.floor(gap);\r\n    this._minutesGap = gap <= 59 ? gap : 1;\r\n  }\r\n\r\n  get minutesGap(): number {\r\n    return this._minutesGap;\r\n  }\r\n\r\n  @Output() timeSet = new EventEmitter<string>();\r\n  @Output() opened = new EventEmitter<null>();\r\n  @Output() closed = new EventEmitter<null>();\r\n  @Output() hourSelected = new EventEmitter<number>();\r\n\r\n  private _minutesGap: number;\r\n  private _format: number;\r\n  private timepickerInput: TimepickerDirective;\r\n\r\n  constructor(private overlay: Overlay, private vcr: ViewContainerRef) {\r\n  }\r\n\r\n  get minTime(): DateTime {\r\n    return this.timepickerInput && (this.timepickerInput.min as DateTime);\r\n  }\r\n\r\n  get maxTime(): DateTime {\r\n    return this.timepickerInput && (this.timepickerInput.max as DateTime);\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this.timepickerInput && this.timepickerInput.disabled;\r\n  }\r\n\r\n  get time(): string {\r\n    return this.timepickerInput && this.timepickerInput.value;\r\n  }\r\n\r\n  /***\r\n   * Register an input with this timepicker.\r\n   * input - The timepicker input to register with this timepicker\r\n   */\r\n  registerInput(input: TimepickerDirective): void {\r\n    if (this.timepickerInput) {\r\n      throw Error('A Timepicker can only be associated with a single input.');\r\n    }\r\n\r\n    this.timepickerInput = input;\r\n    this.trigger = input.elementRef;\r\n  }\r\n\r\n  open(): void {\r\n\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo(this.trigger)\r\n      .withPositions(this.positions);\r\n\r\n    this.overlayRef = this.overlay.create({\r\n      panelClass: this.panelClass,\r\n      hasBackdrop: true,\r\n      positionStrategy: positionStrategy,\r\n      disposeOnNavigation: true,\r\n    });\r\n\r\n    this.subscriptions.add(this.overlayRef\r\n      .keydownEvents()\r\n      .subscribe((event: KeyboardEvent) => {\r\n        if (event.key !== undefined) {\r\n          if (event.key === 'Escape') {\r\n            this.overlayRef.detach();\r\n          }\r\n        } else {\r\n          // tslint:disable-next-line:deprecation\r\n          if (event.keyCode === ESCAPE) {\r\n            this.overlayRef.detach();\r\n          }\r\n        }\r\n      }));\r\n\r\n    this.subscriptions.add(this.overlayRef.backdropClick().subscribe((event: MouseEvent) => {\r\n      this.overlayRef.detach();\r\n    }));\r\n\r\n    this.subscriptions.add(this.overlayRef.detachments().subscribe(() => {\r\n      this.closed.next();\r\n    }));\r\n\r\n    const ngxMaterialTimepickerContentComponentPortal = new ComponentPortal(NgxMaterialTimepickerContentComponent, this.vcr);\r\n\r\n    const ngxMaterialTimepickerContentComponent = this.overlayRef.attach(ngxMaterialTimepickerContentComponentPortal);\r\n\r\n    ngxMaterialTimepickerContentComponent.instance.timepickerBaseRef = this;\r\n    ngxMaterialTimepickerContentComponent.instance.time = this.time;\r\n    ngxMaterialTimepickerContentComponent.instance.defaultTime = this.defaultTime;\r\n    ngxMaterialTimepickerContentComponent.instance.maxTime = this.maxTime;\r\n    ngxMaterialTimepickerContentComponent.instance.minTime = this.minTime;\r\n    ngxMaterialTimepickerContentComponent.instance.format = this.format;\r\n    ngxMaterialTimepickerContentComponent.instance.minutesGap = this.minutesGap;\r\n    ngxMaterialTimepickerContentComponent.instance.disableAnimation = this.disableAnimation;\r\n    ngxMaterialTimepickerContentComponent.instance.cancelBtnTmpl = this.cancelBtnTmpl;\r\n    ngxMaterialTimepickerContentComponent.instance.confirmBtnTmpl = this.confirmBtnTmpl;\r\n    ngxMaterialTimepickerContentComponent.instance.editableHintTmpl = this.editableHintTmpl;\r\n    ngxMaterialTimepickerContentComponent.instance.disabled = this.disabled;\r\n    ngxMaterialTimepickerContentComponent.instance.enableKeyboardInput = this.enableKeyboardInput;\r\n    ngxMaterialTimepickerContentComponent.instance.preventOverlayClick = this.preventOverlayClick;\r\n    this.opened.next();\r\n  }\r\n\r\n  close(): void {\r\n    this.overlayRef.detach();\r\n  }\r\n\r\n  updateTime(time: string): void {\r\n    this.timeUpdated.next(time);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n}\r\n","import {Directive} from '@angular/core';\r\n\r\n/* To override a default toggle icon */\r\n@Directive({selector: '[ngxMaterialTimepickerToggleIcon]'})\r\n\r\nexport class NgxMaterialTimepickerToggleIconDirective {\r\n}\r\n","import {Component, ContentChild, Input} from '@angular/core';\r\nimport {NgxMaterialTimepickerToggleIconDirective} from '../../directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport {NgxMaterialTimepickerComponent} from '../../ngx-material-timepicker.component';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-toggle',\r\n    templateUrl: 'ngx-material-timepicker-toggle.component.html',\r\n    styleUrls: ['ngx-material-timepicker-toggle.component.scss']\r\n})\r\n\r\nexport class NgxMaterialTimepickerToggleComponent {\r\n\r\n    @Input('for') timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._disabled === undefined ? this.timepicker.disabled : this._disabled;\r\n    }\r\n\r\n    set disabled(value: boolean) {\r\n        this._disabled = value;\r\n    }\r\n\r\n    private _disabled: boolean;\r\n\r\n    @ContentChild(NgxMaterialTimepickerToggleIconDirective, {static: true}) customIcon: NgxMaterialTimepickerToggleIconDirective;\r\n\r\n    open(event): void {\r\n        if (this.timepicker) {\r\n            this.timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const TIME_LOCALE = new InjectionToken<string>('TimeLocale');\r\n","import { Directive, ElementRef, forwardRef, HostListener, Inject, Input, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\r\nimport { NgxMaterialTimepickerComponent } from '../ngx-material-timepicker.component';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { TimeAdapter } from '../services/time-adapter';\r\nimport { DateTime } from 'luxon';\r\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\r\n\r\nconst VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // tslint:disable-next-line\r\n    useExisting: forwardRef(() => TimepickerDirective),\r\n    multi: true\r\n};\r\n\r\n@Directive({\r\n    selector: '[ngxTimepicker]',\r\n    providers: [VALUE_ACCESSOR],\r\n    host: {\r\n        '[disabled]': 'disabled',\r\n        '(input)': 'onInput($event.target.value)',\r\n        '(blur)': 'onTouched()',\r\n    },\r\n})\r\nexport class TimepickerDirective implements ControlValueAccessor, OnDestroy, OnChanges {\r\n\r\n    @Input()\r\n    set format(value: number) {\r\n        this._format = value === 24 ? 24 : 12;\r\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\r\n\r\n        if (isDynamicallyChanged) {\r\n            this.value = this._value;\r\n            this._timepicker.updateTime(this._value);\r\n        }\r\n        this.previousFormat = this._format;\r\n    }\r\n\r\n    get format(): number {\r\n        return this._format;\r\n    }\r\n\r\n    private _format = 12;\r\n\r\n    @Input()\r\n    set min(value: string | DateTime) {\r\n        if (typeof value === 'string') {\r\n            this._min = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\r\n            return;\r\n        }\r\n        this._min = value;\r\n    }\r\n\r\n    get min(): string | DateTime {\r\n        return this._min;\r\n    }\r\n\r\n    private _min: string | DateTime;\r\n\r\n    @Input()\r\n    set max(value: string | DateTime) {\r\n        if (typeof value === 'string') {\r\n            this._max = TimeAdapter.parseTime(value, {locale: this.locale, format: this.format});\r\n            return;\r\n        }\r\n        this._max = value;\r\n    }\r\n\r\n    get max(): string | DateTime {\r\n        return this._max;\r\n    }\r\n\r\n    private _max: string | DateTime;\r\n\r\n    @Input('ngxTimepicker')\r\n    set timepicker(picker: NgxMaterialTimepickerComponent) {\r\n        this.registerTimepicker(picker);\r\n    }\r\n\r\n    private _timepicker: NgxMaterialTimepickerComponent;\r\n\r\n    @Input()\r\n    set value(value: string) {\r\n        if (!value) {\r\n            this._value = '';\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        const time = TimeAdapter.formatTime(value, {locale: this.locale, format: this.format});\r\n        const isAvailable = TimeAdapter.isTimeAvailable(\r\n            time,\r\n            <DateTime>this._min,\r\n            <DateTime>this._max,\r\n            'minutes',\r\n            this._timepicker.minutesGap,\r\n            this._format\r\n        );\r\n\r\n        if (isAvailable) {\r\n            this._value = time;\r\n            this.updateInputValue();\r\n            return;\r\n        }\r\n        console.warn('Selected time doesn\\'t match min or max value');\r\n    }\r\n\r\n    get value(): string {\r\n        if (!this._value) {\r\n            return '';\r\n        }\r\n        return TimeAdapter.toLocaleTimeString(this._value, {format: this.format, locale: this.locale});\r\n    }\r\n\r\n    private _value = '';\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() disableClick: boolean;\r\n\r\n    private timepickerSubscriptions: Subscription[] = [];\r\n    private previousFormat: number;\r\n\r\n    onTouched = () => {\r\n    }\r\n\r\n    private onChange: (value: any) => void = () => {\r\n    }\r\n\r\n    constructor(public elementRef: ElementRef,\r\n                @Inject(TIME_LOCALE) private locale: string) {\r\n    }\r\n\r\n    private set defaultTime(time: string) {\r\n        this._timepicker.defaultTime = TimeAdapter.formatTime(time, {locale: this.locale, format: this.format});\r\n    }\r\n\r\n    onInput(value: string) {\r\n        this.value = value;\r\n        this.onChange(value);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['value'] && changes['value'].currentValue) {\r\n            this.defaultTime = changes['value'].currentValue;\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event) {\r\n        if (!this.disableClick) {\r\n            this._timepicker.open();\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    writeValue(value: string): void {\r\n        this.value = value;\r\n        this.defaultTime = value;\r\n    }\r\n\r\n    registerOnChange(fn: (value: any) => void): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.timepickerSubscriptions.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    private registerTimepicker(picker: NgxMaterialTimepickerComponent): void {\r\n        if (picker) {\r\n            this._timepicker = picker;\r\n            this._timepicker.registerInput(this);\r\n            this.timepickerSubscriptions.push(this._timepicker.timeSet.subscribe((time: string) => {\r\n                this.value = time;\r\n                this.onChange(this.value);\r\n                this.onTouched();\r\n            }));\r\n            this.timepickerSubscriptions.push(\r\n                this._timepicker.closed.subscribe(() => this.defaultTime = this._value));\r\n        } else {\r\n            throw new Error('NgxMaterialTimepickerComponent is not defined.' +\r\n                ' Please make sure you passed the timepicker to ngxTimepicker directive');\r\n        }\r\n    }\r\n\r\n    private updateInputValue(): void {\r\n        this.elementRef.nativeElement.value = this.value;\r\n    }\r\n\r\n}\r\n\r\n","import {AfterViewInit, Directive, ElementRef, Input, Renderer2} from '@angular/core';\r\nimport {NgxMaterialTimepickerTheme} from '../models/ngx-material-timepicker-theme.interface';\r\n\r\n@Directive({selector: '[ngxMaterialTimepickerTheme]'})\r\nexport class NgxMaterialTimepickerThemeDirective implements AfterViewInit {\r\n\r\n    @Input('ngxMaterialTimepickerTheme') theme: NgxMaterialTimepickerTheme;\r\n\r\n    private element: HTMLElement;\r\n\r\n    constructor(elementRef: ElementRef, private renderer: Renderer2) {\r\n        this.element = elementRef.nativeElement;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.theme) {\r\n            this.setTheme(this.theme);\r\n        }\r\n    }\r\n\r\n    private setTheme(theme): void {\r\n        for (const val in theme) {\r\n            if (theme.hasOwnProperty(val)) {\r\n                if (typeof theme[val] === 'string') {\r\n                    for (const prop in theme) {\r\n                        if (theme.hasOwnProperty(prop)) {\r\n                            this.renderer.setStyle(this.element, `--${camelCaseToDash(prop)}`, theme[prop]);\r\n                        }\r\n                    }\r\n                    return;\r\n                }\r\n                this.setTheme(theme[val]);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nfunction camelCaseToDash(myStr) {\r\n    return myStr.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n","import { ClockFaceTime } from '../models/clock-face-time.interface';\r\nimport { TimeAdapter } from '../services/time-adapter';\r\nimport { TimeFormat } from '../models/time-format.enum';\r\nimport { DisabledTimeConfig } from '../models/disabled-time-config.interface';\r\nimport { DateTime } from 'luxon';\r\n\r\n\r\nexport function getHours(format: number): ClockFaceTime[] {\r\n    return Array(format).fill(1).map((v, i) => {\r\n        const angleStep = 30;\r\n        const time = v + i;\r\n        const angle = angleStep * time;\r\n        return {time: time === 24 ? 0 : time, angle};\r\n    });\r\n}\r\n\r\nexport function disableHours(hours: ClockFaceTime[], config: DisabledTimeConfig): ClockFaceTime[] {\r\n    if (config.min || config.max) {\r\n\r\n        return hours.map(value => {\r\n            const hour = config.format === 24 ? value.time : TimeAdapter.formatHour(value.time, config.format, config.period);\r\n            const currentTime = DateTime.fromObject({hour}).toFormat(TimeFormat.TWELVE);\r\n\r\n            return {\r\n                ...value,\r\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'hours')\r\n            };\r\n        });\r\n    }\r\n    return hours;\r\n}\r\n\r\nexport function getMinutes(gap = 1): ClockFaceTime[] {\r\n    const minutesCount = 60;\r\n    const angleStep = 360 / minutesCount;\r\n    const minutes = [];\r\n\r\n    for (let i = 0; i < minutesCount; i++) {\r\n        const angle = angleStep * i;\r\n        if (i % gap === 0) {\r\n            minutes.push({time: i, angle: angle !== 0 ? angle : 360});\r\n        }\r\n    }\r\n    return minutes;\r\n}\r\n\r\nexport function disableMinutes(minutes: ClockFaceTime[], selectedHour: number, config: DisabledTimeConfig) {\r\n    if (config.min || config.max) {\r\n\r\n        const hour = TimeAdapter.formatHour(selectedHour, config.format, config.period);\r\n\r\n        return minutes.map(value => {\r\n            const currentTime = DateTime.fromObject({hour, minute: value.time}).toFormat(TimeFormat.TWELVE);\r\n\r\n            return {\r\n                ...value,\r\n                disabled: !TimeAdapter.isTimeAvailable(currentTime, config.min, config.max, 'minutes')\r\n            };\r\n        });\r\n    }\r\n    return minutes;\r\n}\r\n","import { EventEmitter, Input, Output } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { getHours } from '../../utils/timepicker-time.utils';\r\n\r\n\r\nexport class NgxMaterialTimepickerHoursFace {\r\n\r\n    @Input() selectedHour: ClockFaceTime;\r\n    @Input() minTime: DateTime;\r\n    @Input() maxTime: DateTime;\r\n    @Input() format: number;\r\n\r\n    @Output() hourChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() hourSelected = new EventEmitter<number>();\r\n\r\n    hoursList: ClockFaceTime[] = [];\r\n\r\n    protected constructor(format: number) {\r\n        this.hoursList = getHours(format);\r\n    }\r\n\r\n    onTimeSelected(time: number): void {\r\n        this.hourSelected.next(time);\r\n    }\r\n}\r\n","import { AfterContentInit, ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { NgxMaterialTimepickerHoursFace } from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport { disableHours } from '../../utils/timepicker-time.utils';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-24-hours-face',\r\n    templateUrl: 'ngx-material-timepicker-24-hours-face.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NgxMaterialTimepicker24HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements AfterContentInit {\r\n\r\n    constructor() {\r\n        super(24);\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.hoursList = disableHours(this.hoursList, {\r\n            min: this.minTime,\r\n            max: this.maxTime,\r\n            format: this.format\r\n        });\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgxMaterialTimepickerHoursFace } from '../timepicker-hours-face/ngx-material-timepicker-hours-face';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { disableHours } from '../../utils/timepicker-time.utils';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-12-hours-face',\r\n    templateUrl: 'ngx-material-timepicker-12-hours-face.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NgxMaterialTimepicker12HoursFaceComponent extends NgxMaterialTimepickerHoursFace implements OnChanges {\r\n\r\n    @Input() period: TimePeriod;\r\n\r\n    constructor() {\r\n        super(12);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            this.hoursList = disableHours(this.hoursList, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { DateTime } from 'luxon';\r\nimport { disableMinutes, getMinutes } from '../../utils/timepicker-time.utils';\r\n\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-minutes-face',\r\n    templateUrl: './ngx-material-timepicker-minutes-face.component.html'\r\n})\r\nexport class NgxMaterialTimepickerMinutesFaceComponent implements OnChanges {\r\n\r\n    minutesList: ClockFaceTime[] = [];\r\n    timeUnit = TimeUnit;\r\n\r\n    @Input() selectedMinute: ClockFaceTime;\r\n    @Input() selectedHour: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() minTime: DateTime;\r\n    @Input() maxTime: DateTime;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() minuteChange = new EventEmitter<ClockFaceTime>();\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue) {\r\n            const minutes = getMinutes(this.minutesGap);\r\n            this.minutesList = disableMinutes(minutes, this.selectedHour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    HostListener,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    Output,\r\n    SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\n\r\nconst CLOCK_HAND_STYLES = {\r\n    small: {\r\n        height: '75px',\r\n        top: 'calc(50% - 75px)'\r\n    },\r\n    large: {\r\n        height: '103px',\r\n        top: 'calc(50% - 103px)'\r\n    }\r\n};\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-face',\r\n    templateUrl: './ngx-material-timepicker-face.component.html',\r\n    styleUrls: ['./ngx-material-timepicker-face.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxMaterialTimepickerFaceComponent implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    isClockFaceDisabled: boolean;\r\n    innerClockFaceSize = 85;\r\n\r\n    @Input() faceTime: ClockFaceTime[];\r\n    @Input() selectedTime: ClockFaceTime;\r\n    @Input() unit: TimeUnit;\r\n    @Input() format: number;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() timeChange = new EventEmitter<ClockFaceTime>();\r\n    @Output() timeSelected = new EventEmitter<number>();\r\n\r\n    @ViewChild('clockFace', {static: true}) clockFace: ElementRef;\r\n    @ViewChild('clockHand', {static: true}) clockHand: ElementRef;\r\n\r\n    private isStarted: boolean;\r\n    private touchStartHandler: () => any;\r\n    private touchEndHandler: () => any;\r\n\r\n    ngAfterViewInit() {\r\n        this.setClockHandPosition();\r\n        this.addTouchEvents();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const faceTimeChanges = changes['faceTime'];\r\n        const selectedTimeChanges = changes['selectedTime'];\r\n\r\n        if ((faceTimeChanges && faceTimeChanges.currentValue)\r\n            && (selectedTimeChanges && selectedTimeChanges.currentValue)) {\r\n            /* Set time according to passed an input value */\r\n            this.selectedTime = this.faceTime.find(time => time.time === this.selectedTime.time);\r\n        }\r\n        if (selectedTimeChanges && selectedTimeChanges.currentValue) {\r\n            this.setClockHandPosition();\r\n        }\r\n        if (faceTimeChanges && faceTimeChanges.currentValue) {\r\n            // To avoid an error ExpressionChangedAfterItHasBeenCheckedError\r\n            setTimeout(() => this.selectAvailableTime());\r\n        }\r\n    }\r\n\r\n\r\n    trackByTime(_, time: ClockFaceTime): string | number {\r\n        return time.time;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    onMousedown(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = true;\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    @HostListener('touchmove', ['$event.changedTouches[0]'])\r\n    @HostListener('touchend', ['$event.changedTouches[0]'])\r\n    @HostListener('mousemove', ['$event'])\r\n    selectTime(e: MouseEvent | Touch): void {\r\n\r\n        if (!this.isStarted && (e instanceof MouseEvent && e.type !== 'click')) {\r\n            return;\r\n        }\r\n        const clockFaceCords = this.clockFace.nativeElement.getBoundingClientRect();\r\n\r\n        /* Get x0 and y0 of the circle */\r\n        const centerX = clockFaceCords.left + clockFaceCords.width / 2;\r\n        const centerY = clockFaceCords.top + clockFaceCords.height / 2;\r\n        /* Counting the arctangent and convert it to from radian to deg */\r\n        const arctangent = Math.atan(Math.abs(e.clientX - centerX) / Math.abs(e.clientY - centerY)) * 180 / Math.PI;\r\n        /* Get angle according to quadrant */\r\n        const circleAngle = countAngleByCords(centerX, centerY, e.clientX, e.clientY, arctangent);\r\n        /* Check if selected time from the inner clock face (24 hours format only) */\r\n        const isInnerClockChosen = this.format && this.isInnerClockFace(centerX, centerY, e.clientX, e.clientY);\r\n        /* Round angle according to angle step */\r\n        const angleStep = this.unit === TimeUnit.MINUTE ? (6 * (this.minutesGap || 1)) : 30;\r\n        const roundedAngle = isInnerClockChosen\r\n            ? roundAngle(circleAngle, angleStep) + 360\r\n            : roundAngle(circleAngle, angleStep);\r\n        const angle = roundedAngle === 0 ? 360 : roundedAngle;\r\n\r\n        const selectedTime = this.faceTime.find(val => val.angle === angle);\r\n\r\n        if (selectedTime && !selectedTime.disabled) {\r\n            this.timeChange.next(selectedTime);\r\n\r\n            /* To let know whether user ended interaction with clock face */\r\n            if (!this.isStarted) {\r\n                this.timeSelected.next(selectedTime.time);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @HostListener('mouseup', ['$event'])\r\n    onMouseup(e: MouseEvent | TouchEvent) {\r\n        e.preventDefault();\r\n        this.isStarted = false;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeTouchEvents();\r\n    }\r\n\r\n    private addTouchEvents(): void {\r\n        this.touchStartHandler = this.onMousedown.bind(this);\r\n        this.touchEndHandler = this.onMouseup.bind(this);\r\n\r\n        this.clockFace.nativeElement.addEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.addEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private removeTouchEvents(): void {\r\n        this.clockFace.nativeElement.removeEventListener('touchstart', this.touchStartHandler);\r\n        this.clockFace.nativeElement.removeEventListener('touchend', this.touchEndHandler);\r\n    }\r\n\r\n    private setClockHandPosition(): void {\r\n        if (this.format === 24) {\r\n            if (this.selectedTime.time > 12 || this.selectedTime.time === 0) {\r\n                this.decreaseClockHand();\r\n            } else {\r\n                this.increaseClockHand();\r\n            }\r\n        }\r\n\r\n        this.clockHand.nativeElement.style.transform = `rotate(${this.selectedTime.angle}deg)`;\r\n    }\r\n\r\n    private selectAvailableTime(): void {\r\n        const currentTime = this.faceTime.find(time => this.selectedTime.time === time.time);\r\n        this.isClockFaceDisabled = this.faceTime.every(time => time.disabled);\r\n\r\n        if ((currentTime && currentTime.disabled) && !this.isClockFaceDisabled) {\r\n            const availableTime = this.faceTime.find(time => !time.disabled);\r\n\r\n            this.timeChange.next(availableTime);\r\n        }\r\n    }\r\n\r\n    private isInnerClockFace(x0: number, y0: number, x: number, y: number): boolean {\r\n        /* Detect whether time from the inner clock face or not (24 format only) */\r\n        return Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)) < this.innerClockFaceSize;\r\n    }\r\n\r\n    private decreaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.small.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.small.top;\r\n    }\r\n\r\n    private increaseClockHand(): void {\r\n        this.clockHand.nativeElement.style.height = CLOCK_HAND_STYLES.large.height;\r\n        this.clockHand.nativeElement.style.top = CLOCK_HAND_STYLES.large.top;\r\n    }\r\n}\r\n\r\nfunction roundAngle(angle: number, step: number): number {\r\n    return Math.round(angle / step) * step;\r\n}\r\n\r\nfunction countAngleByCords(x0: number, y0: number, x: number, y: number, currentAngle: number): number {\r\n    if (y > y0 && x >= x0) {// II quarter\r\n        return 180 - currentAngle;\r\n    } else if (y > y0 && x < x0) {// III quarter\r\n        return 180 + currentAngle;\r\n    } else if (y < y0 && x < x0) {// IV quarter\r\n        return 360 - currentAngle;\r\n    } else {// I quarter\r\n        return currentAngle;\r\n    }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-button',\r\n    templateUrl: './ngx-material-timepicker-button.component.html',\r\n    styleUrls: ['./ngx-material-timepicker-button.component.scss']\r\n})\r\nexport class NgxMaterialTimepickerButtonComponent {\r\n}\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Inject,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges,\r\n    TemplateRef\r\n} from '@angular/core';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { DateTime, Info } from 'luxon';\r\nimport { disableHours, disableMinutes, getHours, getMinutes } from '../../utils/timepicker-time.utils';\r\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial',\r\n    templateUrl: 'ngx-material-timepicker-dial.component.html',\r\n    styleUrls: ['ngx-material-timepicker-dial.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NgxMaterialTimepickerDialComponent implements OnChanges {\r\n\r\n    timeUnit = TimeUnit;\r\n\r\n    hours: ClockFaceTime[];\r\n    minutes: ClockFaceTime[];\r\n    meridiems = Info.meridiems({locale: this.locale});\r\n\r\n    isHintVisible: boolean;\r\n\r\n    @Input() editableHintTmpl: TemplateRef<Node>;\r\n    @Input() hour: number | string;\r\n    @Input() minute: number | string;\r\n    @Input() format: number;\r\n    @Input() period: TimePeriod;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() minTime: DateTime;\r\n    @Input() maxTime: DateTime;\r\n    @Input() isEditable: boolean;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() hourChanged = new EventEmitter<ClockFaceTime>();\r\n    @Output() minuteChanged = new EventEmitter<ClockFaceTime>();\r\n\r\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['format'] && changes['format'].currentValue) {\r\n            const hours = getHours(this.format);\r\n\r\n            this.hours = disableHours(hours, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n        if (changes['period'] && changes['period'].currentValue\r\n            || changes['hour'] && changes['hour'].currentValue) {\r\n            const minutes = getMinutes(this.minutesGap);\r\n\r\n            this.minutes = disableMinutes(minutes, +this.hour, {\r\n                min: this.minTime,\r\n                max: this.maxTime,\r\n                format: this.format,\r\n                period: this.period\r\n            });\r\n        }\r\n    }\r\n\r\n    changeTimeUnit(unit: TimeUnit): void {\r\n        this.timeUnitChanged.next(unit);\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.periodChanged.next(period);\r\n    }\r\n\r\n    changeHour(hour: ClockFaceTime): void {\r\n        this.hourChanged.next(hour);\r\n    }\r\n\r\n    changeMinute(minute: ClockFaceTime): void {\r\n        this.minuteChanged.next(minute);\r\n    }\r\n\r\n    showHint(): void {\r\n        this.isHintVisible = true;\r\n    }\r\n\r\n    hideHint(): void {\r\n        this.isHintVisible = false;\r\n    }\r\n}\r\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\r\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\r\nimport { TimeUnit } from '../models/time-unit.enum';\r\nimport { DateTime, NumberingSystem } from 'luxon';\r\n\r\ntype TimeMeasure = 'hour' | 'minute';\r\n\r\n@Pipe({\r\n    name: 'timeParser'\r\n})\r\nexport class TimeParserPipe implements PipeTransform {\r\n\r\n    private numberingSystem: NumberingSystem;\r\n\r\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\r\n        this.numberingSystem = DateTime.local().setLocale(this.locale).resolvedLocaleOpts().numberingSystem as NumberingSystem;\r\n    }\r\n\r\n    transform(time: string | number, timeUnit = TimeUnit.HOUR): number | string {\r\n        if (time == null || time === '') {\r\n            return '';\r\n        }\r\n\r\n        if (!isNaN(+time)) {\r\n            return time;\r\n        }\r\n\r\n        if (timeUnit === TimeUnit.MINUTE) {\r\n            return this.parseTime(time, 'm', 'minute');\r\n        }\r\n\r\n        return this.parseTime(time, 'H', 'hour');\r\n\r\n    }\r\n\r\n    private parseTime(time: string | number, format: string, timeMeasure: TimeMeasure): number {\r\n        const parsedTime = DateTime.fromFormat(String(time), format, {numberingSystem: this.numberingSystem})[timeMeasure];\r\n\r\n        if (!isNaN(parsedTime)) {\r\n            return parsedTime;\r\n        }\r\n\r\n        throw new Error(`Cannot parse time - ${time}`);\r\n    }\r\n\r\n}\r\n","/* tslint:disable:triple-equals */\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { isDigit } from '../../utils/timepicker.utils';\r\nimport { TimeParserPipe } from '../../pipes/time-parser.pipe';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-dial-control',\r\n    templateUrl: 'ngx-material-timepicker-dial-control.component.html',\r\n    styleUrls: ['ngx-material-timepicker-dial-control.component.scss'],\r\n    providers: [TimeParserPipe]\r\n})\r\nexport class NgxMaterialTimepickerDialControlComponent {\r\n\r\n    previousTime: number | string;\r\n\r\n    @Input() timeList: ClockFaceTime[];\r\n    @Input() timeUnit: TimeUnit;\r\n    @Input() time: string;\r\n    @Input() isActive: boolean;\r\n    @Input() isEditable: boolean;\r\n    @Input() minutesGap: number;\r\n\r\n    @Output() timeUnitChanged = new EventEmitter<TimeUnit>();\r\n    @Output() timeChanged = new EventEmitter<ClockFaceTime>();\r\n    @Output() focused = new EventEmitter<null>();\r\n    @Output() unfocused = new EventEmitter<null>();\r\n\r\n    constructor(private timeParserPipe: TimeParserPipe) {\r\n    }\r\n\r\n    private get selectedTime(): ClockFaceTime {\r\n        if (!!this.time) {\r\n            return this.timeList.find(t => t.time === +this.time);\r\n        }\r\n    }\r\n\r\n    saveTimeAndChangeTimeUnit(event: FocusEvent, unit: TimeUnit): void {\r\n        event.preventDefault();\r\n        this.previousTime = this.time;\r\n        this.timeUnitChanged.next(unit);\r\n        this.focused.next();\r\n    }\r\n\r\n    updateTime(): void {\r\n        const time = this.selectedTime;\r\n        if (time) {\r\n            this.timeChanged.next(time);\r\n            this.previousTime = time.time;\r\n        }\r\n    }\r\n\r\n    onKeyDown(e: KeyboardEvent): void {\r\n        const char = String.fromCharCode(e.keyCode);\r\n\r\n\r\n        if ((!isDigit(e)) || isTimeDisabledToChange(this.time, char, this.timeList)) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if (isDigit(e)) {\r\n            this.changeTimeByArrow(e.keyCode);\r\n        }\r\n    }\r\n\r\n    onModelChange(value: string): void {\r\n        this.time = this.timeParserPipe.transform(value, this.timeUnit).toString();\r\n    }\r\n\r\n    private changeTimeByArrow(keyCode: number): void {\r\n        const ARROW_UP = 38;\r\n        const ARROW_DOWN = 40;\r\n        let time: string;\r\n\r\n        if (keyCode === ARROW_UP) {\r\n            time = String(+this.time + (this.minutesGap || 1));\r\n        } else if (keyCode === ARROW_DOWN) {\r\n            time = String(+this.time - (this.minutesGap || 1));\r\n        }\r\n\r\n        if (!isTimeUnavailable(time, this.timeList)) {\r\n            this.time = time;\r\n            this.updateTime();\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction isTimeDisabledToChange(currentTime: string, nextTime: string, timeList: ClockFaceTime[]): boolean {\r\n    const isNumber = /\\d/.test(nextTime);\r\n\r\n    if (isNumber) {\r\n        const time = currentTime + nextTime;\r\n        return isTimeUnavailable(time, timeList);\r\n    }\r\n}\r\n\r\nfunction isTimeUnavailable(time: string, timeList: ClockFaceTime[]): boolean {\r\n    const selectedTime = timeList.find(value => value.time === +time);\r\n    return !selectedTime || (selectedTime && selectedTime.disabled);\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { animate, sequence, style, transition, trigger } from '@angular/animations';\r\nimport { DateTime } from 'luxon';\r\nimport { disableHours, disableMinutes } from '../../utils/timepicker-time.utils';\r\n\r\n@Component({\r\n    selector: 'ngx-material-timepicker-period',\r\n    templateUrl: 'ngx-material-timepicker-period.component.html',\r\n    styleUrls: ['ngx-material-timepicker-period.component.scss'],\r\n    animations: [\r\n        trigger('scaleInOut', [\r\n            transition(':enter', [\r\n                style({transform: 'scale(0)'}),\r\n                animate('.2s', style({transform: 'scale(1)'})),\r\n                sequence([\r\n                    animate('3s', style({opacity: 1})),\r\n                    animate('.3s', style({opacity: 0}))\r\n                ])\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class NgxMaterialTimepickerPeriodComponent {\r\n\r\n    timePeriod = TimePeriod;\r\n    isPeriodAvailable = true;\r\n\r\n    @Input() selectedPeriod: TimePeriod;\r\n    @Input() format: number;\r\n    @Input() activeTimeUnit: TimeUnit;\r\n    @Input() hours: ClockFaceTime[];\r\n    @Input() minutes: ClockFaceTime[];\r\n    @Input() minTime: DateTime;\r\n    @Input() maxTime: DateTime;\r\n    @Input() selectedHour: number | string;\r\n    @Input() meridiems: string[];\r\n\r\n    @Output() periodChanged = new EventEmitter<TimePeriod>();\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.isPeriodAvailable = this.isSwitchPeriodAvailable(period);\r\n        if (this.isPeriodAvailable) {\r\n            this.periodChanged.next(period);\r\n        }\r\n    }\r\n\r\n    animationDone(): void {\r\n        this.isPeriodAvailable = true;\r\n    }\r\n\r\n    private isSwitchPeriodAvailable(period: TimePeriod): boolean {\r\n        const time = this.getDisabledTimeByPeriod(period);\r\n        return !time.every(t => t.disabled);\r\n    }\r\n\r\n    private getDisabledTimeByPeriod(period: TimePeriod): ClockFaceTime[] {\r\n        switch (this.activeTimeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return disableHours(this.hours, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            case TimeUnit.MINUTE:\r\n                return disableMinutes(this.minutes, +this.selectedHour, {\r\n                    min: this.minTime,\r\n                    max: this.maxTime,\r\n                    format: this.format,\r\n                    period\r\n                });\r\n            default:\r\n                throw new Error('no such TimeUnit');\r\n        }\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'styleSanitizer'\r\n})\r\nexport class StyleSanitizerPipe implements PipeTransform {\r\n\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n    }\r\n\r\n    transform(value: string): any {\r\n        if (!value) {\r\n            return value;\r\n        }\r\n        return this.domSanitizer.bypassSecurityTrustStyle(value);\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TimeUnit } from '../models/time-unit.enum';\r\nimport { DateTime } from 'luxon';\r\n\r\n@Pipe({\r\n    name: 'timeFormatter'\r\n})\r\nexport class TimeFormatterPipe implements PipeTransform {\r\n\r\n    transform(time: number | string, timeUnit: TimeUnit): any {\r\n        if (time == null || time === '') {\r\n            return time;\r\n        }\r\n        switch (timeUnit) {\r\n            case TimeUnit.HOUR:\r\n                return DateTime.fromObject({hour: +time}).toFormat('HH');\r\n            case TimeUnit.MINUTE:\r\n                return DateTime.fromObject({minute: +time}).toFormat('mm');\r\n            default:\r\n                throw new Error('no such time unit');\r\n        }\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'minutesFormatter'\r\n})\r\nexport class MinutesFormatterPipe implements PipeTransform {\r\n\r\n    transform(minute: number, gap = 5): number | string {\r\n        if (!minute) {\r\n            return minute;\r\n        }\r\n\r\n        return minute % gap === 0 ? minute : '';\r\n    }\r\n\r\n}\r\n","import { Component, forwardRef, Inject, Input, OnDestroy, OnInit, TemplateRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { NgxMaterialTimepickerService } from '../../services/ngx-material-timepicker.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ClockFaceTime } from '../../models/clock-face-time.interface';\r\nimport { TimePeriod } from '../../models/time-period.enum';\r\nimport { getHours, getMinutes } from '../../utils/timepicker-time.utils';\r\nimport { TimeUnit } from '../../models/time-unit.enum';\r\nimport { NgxMaterialTimepickerTheme } from '../../models/ngx-material-timepicker-theme.interface';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { TimeAdapter } from '../../services/time-adapter';\r\nimport { TIME_LOCALE } from '../../tokens/time-locale.token';\r\n\r\n@Component({\r\n    selector: 'ngx-timepicker-field',\r\n    templateUrl: './ngx-timepicker-field.component.html',\r\n    styleUrls: ['./ngx-timepicker-field.component.scss'],\r\n    providers: [\r\n        NgxMaterialTimepickerService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NgxTimepickerFieldComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NgxTimepickerFieldComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n    period$: Observable<TimePeriod>;\r\n\r\n    hour: number;\r\n    minute: number;\r\n\r\n    minHour = 1;\r\n    maxHour = 12;\r\n\r\n    timeUnit = TimeUnit;\r\n    timepickerTime: string;\r\n    isDefaultTime: boolean;\r\n\r\n    @Input() disabled: boolean;\r\n    @Input() toggleIcon: TemplateRef<HTMLObjectElement>;\r\n    @Input() buttonAlign: 'right' | 'left' = 'right';\r\n    @Input() clockTheme: NgxMaterialTimepickerTheme;\r\n    @Input() controlOnly: boolean;\r\n    @Input() cancelBtnTmpl: TemplateRef<Node>;\r\n    @Input() confirmBtnTmpl: TemplateRef<Node>;\r\n\r\n    @Input()\r\n    set format(value: number) {\r\n        this._format = value === 24 ? 24 : 12;\r\n        this.minHour = this._format === 12 ? 1 : 0;\r\n        this.maxHour = this._format === 12 ? 12 : 23;\r\n        this.hoursList = getHours(this._format);\r\n        const isDynamicallyChanged = value && (this.previousFormat && this.previousFormat !== this._format);\r\n\r\n        if (isDynamicallyChanged) {\r\n            this.defaultTime = this.timepickerTime;\r\n        }\r\n        this.previousFormat = this._format;\r\n    }\r\n\r\n    get format(): number {\r\n        return this._format;\r\n    }\r\n\r\n\r\n    @Input()\r\n    set defaultTime(val: string) {\r\n        const time = TimeAdapter.formatTime(val, {locale: this.locale, format: this._format});\r\n        this.timepickerService.setDefaultTimeIfAvailable(time, null, null, this._format);\r\n        this._defaultTime = time;\r\n        this.timepickerTime = time;\r\n        this.isDefaultTime = !!time;\r\n    }\r\n\r\n    get defaultTime(): string {\r\n        return this._defaultTime;\r\n    }\r\n\r\n    private _defaultTime: string;\r\n    private _format = 12;\r\n    private previousFormat: number;\r\n\r\n    private hoursList: ClockFaceTime[];\r\n    private minutesList: ClockFaceTime[];\r\n\r\n    private unsubscribe$ = new Subject();\r\n\r\n    private onChange: (value: string) => void = () => {\r\n    }\r\n\r\n    constructor(private timepickerService: NgxMaterialTimepickerService,\r\n                @Inject(TIME_LOCALE) private locale: string) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.period$ = this.timepickerService.selectedPeriod;\r\n\r\n        this.timepickerService.selectedHour.pipe(takeUntil(this.unsubscribe$))\r\n            .subscribe(hour => this.hour = hour.time);\r\n\r\n        this.timepickerService.selectedMinute.pipe(takeUntil(this.unsubscribe$))\r\n            .subscribe(minute => this.minute = minute.time);\r\n\r\n        this.hoursList = getHours(this._format);\r\n        this.minutesList = getMinutes();\r\n    }\r\n\r\n    writeValue(val: string): void {\r\n        if (val) {\r\n            this.defaultTime = val;\r\n        }\r\n    }\r\n\r\n    registerOnTouched(fn: any): void {\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    changeHour(hour: number): void {\r\n        this.timepickerService.hour = this.hoursList.find(h => h.time === hour);\r\n        this.changeTime();\r\n    }\r\n\r\n    changeMinute(minute: number): void {\r\n        this.timepickerService.minute = this.minutesList.find(m => m.time === minute);\r\n        this.changeTime();\r\n    }\r\n\r\n    changePeriod(period: TimePeriod): void {\r\n        this.timepickerService.period = period;\r\n        this.changeTime();\r\n    }\r\n\r\n    onTimeSet(time: string): void {\r\n        const localeTime = TimeAdapter.toLocaleTimeString(time, {format: this.format, locale: this.locale});\r\n\r\n        this.defaultTime = time;\r\n        this.onChange(localeTime);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe$.next();\r\n    }\r\n\r\n    private changeTime(): void {\r\n        const time = this.timepickerService.getFullTime(this._format);\r\n        this.timepickerTime = time;\r\n        this.onChange(time);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\r\nimport { isDigit } from '../../../utils/timepicker.utils';\r\nimport { TimeFormatterPipe } from '../../../pipes/time-formatter.pipe';\r\nimport { TimeUnit } from '../../../models/time-unit.enum';\r\nimport { TimeParserPipe } from '../../../pipes/time-parser.pipe';\r\n\r\n@Component({\r\n    selector: 'ngx-timepicker-time-control',\r\n    templateUrl: './ngx-timepicker-time-control.component.html',\r\n    styleUrls: ['./ngx-timepicker-time-control.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [TimeParserPipe]\r\n})\r\n\r\nexport class NgxTimepickerTimeControlComponent implements OnInit, OnChanges {\r\n\r\n    @Input() time: number;\r\n    @Input() min: number;\r\n    @Input() max: number;\r\n    @Input() placeholder: string;\r\n    @Input() timeUnit: TimeUnit;\r\n    @Input() disabled: boolean;\r\n    @Input() isDefaultTimeSet: boolean;\r\n\r\n    @Output() timeChanged = new EventEmitter<number>();\r\n\r\n    isFocused: boolean;\r\n\r\n    constructor(private timeParser: TimeParserPipe) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.isDefaultTimeSet) {\r\n            this.time = new TimeFormatterPipe().transform(this.time, this.timeUnit);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        const timeChanges = changes['time'];\r\n        const isTimeNotProvided = timeChanges && timeChanges.isFirstChange() && !this.isDefaultTimeSet;\r\n\r\n        if (isTimeNotProvided) {\r\n            this.time = null;\r\n        }\r\n    }\r\n\r\n    onKeydown(event: KeyboardEvent): void {\r\n        if (!isDigit(event)) {\r\n            event.preventDefault();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'ArrowUp':\r\n                this.increase();\r\n                break;\r\n            case 'ArrowDown':\r\n                this.decrease();\r\n                break;\r\n        }\r\n    }\r\n\r\n    increase(): void {\r\n        if (!this.disabled) {\r\n            let nextTime = +this.time + 1;\r\n\r\n            if (nextTime > this.max) {\r\n                nextTime = this.min;\r\n            }\r\n\r\n            this.timeChanged.emit(nextTime);\r\n        }\r\n    }\r\n\r\n    decrease(): void {\r\n        if (!this.disabled) {\r\n            let previousTime = +this.time - 1;\r\n\r\n            if (previousTime < this.min) {\r\n                previousTime = this.max;\r\n            }\r\n\r\n            this.timeChanged.emit(previousTime);\r\n        }\r\n    }\r\n\r\n    onInput(input: HTMLInputElement) {\r\n        const value = parseInt(input.value, 10);\r\n\r\n        if (!isNaN(value)) {\r\n            this.time = value;\r\n\r\n            if (this.time > this.max) {\r\n                this.time = +String(value)[0];\r\n            }\r\n\r\n            if (this.time < this.min) {\r\n                this.time = this.min;\r\n            }\r\n\r\n            input.value = String(this.time);\r\n            this.timeChanged.emit(this.time);\r\n        }\r\n\r\n    }\r\n\r\n    onFocus(): void {\r\n        this.isFocused = true;\r\n    }\r\n\r\n    onBlur(): void {\r\n        this.time = new TimeFormatterPipe().transform(this.time, this.timeUnit);\r\n        this.isFocused = false;\r\n    }\r\n\r\n    onModelChange(value: string): void {\r\n        this.time = +this.timeParser.transform(value, this.timeUnit);\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Inject, Input, Output } from '@angular/core';\r\nimport { TimePeriod } from '../../../models/time-period.enum';\r\nimport { animate, style, transition, trigger } from '@angular/animations';\r\nimport { TIME_LOCALE } from '../../../tokens/time-locale.token';\r\nimport { Info } from 'luxon';\r\n\r\n@Component({\r\n    selector: 'ngx-timepicker-period-selector',\r\n    templateUrl: 'ngx-timepicker-period-selector.component.html',\r\n    styleUrls: ['./ngx-timepicker-period-selector.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    animations: [\r\n        trigger('scaleInOut', [\r\n            transition(':enter', [\r\n                style({transform: 'scale(0)', opacity: 0}),\r\n                animate(200, style({transform: 'scale(1)', opacity: 1}))\r\n            ]),\r\n            transition(':leave', [\r\n                animate(200, style({transform: 'scale(0)', opacity: 0}))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\n\r\nexport class NgxTimepickerPeriodSelectorComponent {\r\n\r\n    @Input() isOpened: boolean;\r\n    @Input() disabled: boolean;\r\n    @Input()\r\n    set selectedPeriod(period: TimePeriod) {\r\n        if (period) {\r\n            const periods = [TimePeriod.AM, TimePeriod.PM];\r\n            this.localizedPeriod = this.meridiems[periods.indexOf(period)];\r\n        }\r\n    }\r\n\r\n    @Output() periodSelected = new EventEmitter<TimePeriod>();\r\n\r\n    period = TimePeriod;\r\n    meridiems = Info.meridiems({locale: this.locale});\r\n    localizedPeriod: string;\r\n\r\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\r\n    }\r\n\r\n    open(): void {\r\n        if (!this.disabled) {\r\n            this.isOpened = true;\r\n        }\r\n    }\r\n\r\n    select(period: TimePeriod): void {\r\n        this.periodSelected.next(period);\r\n        this.isOpened = false;\r\n    }\r\n\r\n    backdropClick(): void {\r\n        this.isOpened = false;\r\n    }\r\n}\r\n","import { Inject, Pipe, PipeTransform } from '@angular/core';\r\nimport { TIME_LOCALE } from '../tokens/time-locale.token';\r\nimport { TimeUnit } from '../models/time-unit.enum';\r\nimport { DateTime } from 'luxon';\r\n\r\ntype TimeMeasure = 'hour' | 'minute';\r\n\r\n@Pipe({\r\n    name: 'timeLocalizer'\r\n})\r\nexport class TimeLocalizerPipe implements PipeTransform {\r\n\r\n    constructor(@Inject(TIME_LOCALE) private locale: string) {\r\n    }\r\n\r\n    transform(time: number | string, timeUnit: TimeUnit): string {\r\n        if (time == null || time === '') {\r\n            return '';\r\n        }\r\n\r\n        switch (timeUnit) {\r\n            case TimeUnit.HOUR: {\r\n                const format = time === 0 ? 'HH' : 'H';\r\n                return this.formatTime('hour', time, format);\r\n            }\r\n            case TimeUnit.MINUTE:\r\n                return this.formatTime('minute', time, 'mm');\r\n            default:\r\n                throw new Error(`There is no Time Unit with type ${timeUnit}`);\r\n        }\r\n    }\r\n\r\n    private formatTime(timeMeasure: TimeMeasure, time: string | number, format: string): string {\r\n        try {\r\n            return DateTime.fromObject({[timeMeasure]: +time}).setLocale(this.locale).toFormat(format);\r\n        } catch {\r\n            throw new Error(`Cannot format provided time - ${time} to locale - ${this.locale}`);\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'activeHour'\r\n})\r\nexport class ActiveHourPipe implements PipeTransform {\r\n\r\n    transform(hour: number, currentHour: number, isClockFaceDisabled: boolean): boolean {\r\n        if (hour == null || isClockFaceDisabled) {\r\n            return false;\r\n        }\r\n\r\n        return hour === currentHour;\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'activeMinute'\r\n})\r\nexport class ActiveMinutePipe implements PipeTransform {\r\n\r\n    transform(minute: number, currentMinute: number, gap: number, isClockFaceDisabled: boolean): boolean {\r\n        if (minute == null || isClockFaceDisabled) {\r\n            return false;\r\n        }\r\n        const defaultGap = 5;\r\n\r\n        return ((currentMinute === minute) && (minute % (gap || defaultGap) === 0));\r\n    }\r\n\r\n}\r\n","import {Directive, ElementRef, Inject, Input, OnChanges, OnDestroy, Optional} from '@angular/core';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\n@Directive({\r\n    selector: '[timepickerAutofocus]'\r\n})\r\nexport class AutofocusDirective implements OnChanges, OnDestroy {\r\n\r\n    @Input('timepickerAutofocus') isFocusActive: boolean;\r\n\r\n    private activeElement: HTMLElement;\r\n\r\n    constructor(private element: ElementRef, @Optional() @Inject(DOCUMENT) private document: any) {\r\n        this.activeElement = this.document.activeElement;\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (this.isFocusActive) {\r\n            // To avoid ExpressionChangedAfterItHasBeenCheckedError;\r\n            setTimeout(() => this.element.nativeElement.focus({ preventScroll: true }));\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // To avoid ExpressionChangedAfterItHasBeenCheckedError;\r\n        setTimeout(() => this.activeElement.focus({ preventScroll: true }));\r\n    }\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxMaterialTimepickerComponent } from './ngx-material-timepicker.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgxMaterialTimepickerToggleComponent } from './components/timepicker-toggle-button/ngx-material-timepicker-toggle.component';\r\nimport { TimepickerDirective } from './directives/ngx-timepicker.directive';\r\nimport { NgxMaterialTimepickerToggleIconDirective } from './directives/ngx-material-timepicker-toggle-icon.directive';\r\nimport { NgxMaterialTimepickerThemeDirective } from './directives/ngx-material-timepicker-theme.directive';\r\nimport {\r\n  NgxMaterialTimepicker24HoursFaceComponent\r\n} from './components/timepicker-24-hours-face/ngx-material-timepicker-24-hours-face.component';\r\nimport {\r\n  NgxMaterialTimepicker12HoursFaceComponent\r\n} from './components/timepicker-12-hours-face/ngx-material-timepicker-12-hours-face.component';\r\nimport {\r\n  NgxMaterialTimepickerMinutesFaceComponent\r\n} from './components/timepicker-minutes-face/ngx-material-timepicker-minutes-face.component';\r\nimport { NgxMaterialTimepickerFaceComponent } from './components/timepicker-face/ngx-material-timepicker-face.component';\r\nimport { NgxMaterialTimepickerButtonComponent } from './components/timepicker-button/ngx-material-timepicker-button.component';\r\nimport { NgxMaterialTimepickerDialComponent } from './components/timepicker-dial/ngx-material-timepicker-dial.component';\r\nimport {\r\n  NgxMaterialTimepickerDialControlComponent\r\n} from './components/timepicker-dial-control/ngx-material-timepicker-dial-control.component';\r\nimport { NgxMaterialTimepickerPeriodComponent } from './components/timepicker-period/ngx-material-timepicker-period.component';\r\nimport { StyleSanitizerPipe } from './pipes/style-sanitizer.pipe';\r\nimport { TimeFormatterPipe } from './pipes/time-formatter.pipe';\r\nimport { MinutesFormatterPipe } from './pipes/minutes-formatter.pipe';\r\nimport { NgxTimepickerFieldComponent } from './components/timepicker-field/ngx-timepicker-field.component';\r\nimport {\r\n  NgxTimepickerTimeControlComponent\r\n} from './components/timepicker-field/timepicker-time-control/ngx-timepicker-time-control.component';\r\nimport {\r\n  NgxTimepickerPeriodSelectorComponent\r\n} from './components/timepicker-field/timepicker-period-selector/ngx-timepicker-period-selector.component';\r\nimport { TimeLocalizerPipe } from './pipes/time-localizer.pipe';\r\nimport { TIME_LOCALE } from './tokens/time-locale.token';\r\nimport { TimeAdapter } from './services/time-adapter';\r\nimport { TimeParserPipe } from './pipes/time-parser.pipe';\r\nimport { ActiveHourPipe } from './pipes/active-hour.pipe';\r\nimport { ActiveMinutePipe } from './pipes/active-minute.pipe';\r\nimport {\r\n  NgxMaterialTimepickerContentComponent\r\n} from './components/ngx-material-timepicker-content/ngx-material-timepicker-content.component';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PortalModule,\r\n    OverlayModule\r\n  ],\r\n  exports: [\r\n    NgxMaterialTimepickerComponent,\r\n    NgxMaterialTimepickerToggleComponent,\r\n    NgxTimepickerFieldComponent,\r\n    TimepickerDirective,\r\n    NgxMaterialTimepickerToggleIconDirective,\r\n    NgxMaterialTimepickerThemeDirective\r\n  ],\r\n  declarations: [\r\n    AutofocusDirective,\r\n    NgxMaterialTimepickerComponent,\r\n    NgxMaterialTimepicker24HoursFaceComponent,\r\n    NgxMaterialTimepicker12HoursFaceComponent,\r\n    NgxMaterialTimepickerMinutesFaceComponent,\r\n    NgxMaterialTimepickerFaceComponent,\r\n    NgxMaterialTimepickerToggleComponent,\r\n    NgxMaterialTimepickerButtonComponent,\r\n    NgxMaterialTimepickerDialComponent,\r\n    NgxMaterialTimepickerDialControlComponent,\r\n    NgxMaterialTimepickerPeriodComponent,\r\n    StyleSanitizerPipe,\r\n    TimeFormatterPipe,\r\n    TimepickerDirective,\r\n    NgxMaterialTimepickerToggleIconDirective,\r\n    MinutesFormatterPipe,\r\n    NgxMaterialTimepickerThemeDirective,\r\n    NgxTimepickerFieldComponent,\r\n    NgxTimepickerTimeControlComponent,\r\n    NgxTimepickerPeriodSelectorComponent,\r\n    TimeLocalizerPipe,\r\n    TimeParserPipe,\r\n    ActiveHourPipe,\r\n    ActiveMinutePipe,\r\n    NgxMaterialTimepickerContentComponent\r\n  ],\r\n  providers: [\r\n    { provide: TIME_LOCALE, useValue: TimeAdapter.DEFAULT_LOCALE }\r\n  ],\r\n  entryComponents: [NgxMaterialTimepickerContentComponent]\r\n})\r\nexport class NgxMaterialTimepickerModule {\r\n\r\n  static setLocale(locale: string): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxMaterialTimepickerModule,\r\n      providers: [\r\n        { provide: TIME_LOCALE, useValue: locale }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["tslib_1.__decorate","tslib_1.__param","tslib_1.__extends"],"mappings":"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"}